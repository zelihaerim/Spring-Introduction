<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- in object-oriented computer programming, 
	the SOLID acronym defines five design principles that will make
	 your code understandable, flexible and maintainable. 
	 
	 
	 -->


	<!-- properties file kullanilarak injection yapma:  -->
	<context:property-placeholder location="classpath:values.properties"/>	
	<bean id="database" class="springIntro.CustomerDal">	
	<!--  dolar isareti ile , "" arasında deger vermek yerine, properties file dan variable adi ile al dedik -->
	<property name="connectionString" value="${database.connectionString}"></property> 
	<!-- Burada connectionString class member dır. -->
	</bean> 
	<!-- you can change class CustomerDal to MsSqlCustomerDal and Oracle String to MySql Server String-->
	<bean id="service" class="springIntro.CustomerManager"> 
	<!-- ICustomerDal interface referansını new lemek icin iki yontem kullanacağiz: -->
<!-- 1)constructor injection ->	<constructor-arg ref="database"/>  -->
	<!--  Setter injection, name burada set eden fonksiyondaki parametrenin adidir.-->
	<property name="customerDal"  ref="database"></property>
	</bean>


</beans>